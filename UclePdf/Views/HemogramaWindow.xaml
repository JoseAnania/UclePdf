<Window x:Class="UclePdf.Views.HemogramaWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:UclePdf.ViewModels"
        xmlns:conv="clr-namespace:UclePdf.Converters"
        Title="Hemograma" Height="600" Width="900">
    <Window.Resources>
        <conv:StringToDoubleInvariantConverter x:Key="StringToDouble"/>
        <Style x:Key="PrimaryButton" TargetType="Button">
            <Setter Property="Padding" Value="20,10"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="#FF1976D2"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
            <Setter Property="Background" Value="#FFD32F2F"/>
        </Style>
        <Style x:Key="RightAlignedTextBox" TargetType="TextBox">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>
        <Style x:Key="RightAlignedTextBlock" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>
        <SolidColorBrush x:Key="CalcBg" Color="#FFFDE9A9"/>
        <Style x:Key="CalcCellStyle" TargetType="DataGridCell">
            <Style.Triggers>
                <DataTrigger Binding="{Binding EsCalculadoAbsoluto}" Value="True">
                    <Setter Property="Background" Value="{StaticResource CalcBg}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <vm:HemogramaViewModel/>
    </Window.DataContext>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <DataGrid Grid.Row="0" ItemsSource="{Binding Items}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Determinacion" Binding="{Binding Determinacion}" IsReadOnly="True" Width="*"/>
                <DataGridTextColumn Header="Unidades" Binding="{Binding Unidades}" IsReadOnly="True" Width="120"/>

                <DataGridTextColumn Header="Valor relativo" Width="120">
                    <DataGridTextColumn.Binding>
                        <Binding Path="ValorRelativo" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource StringToDouble}">
                            <Binding.ValidationRules>
                                <ExceptionValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </DataGridTextColumn.Binding>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource RightAlignedTextBlock}">
                            <Setter Property="Text" Value="{Binding ValorRelativo, Converter={StaticResource StringToDouble}}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox" BasedOn="{StaticResource RightAlignedTextBox}">
                            <EventSetter Event="PreviewTextInput" Handler="OnPreviewTextInputNumeric"/>
                            <EventSetter Event="PreviewKeyDown" Handler="OnPreviewKeyDownNumeric"/>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Valor absoluto" Binding="{Binding ValorAbsoluto, StringFormat=F0}" IsReadOnly="True" Width="120" CellStyle="{StaticResource CalcCellStyle}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource RightAlignedTextBlock}"/>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Valor ref caninos" Binding="{Binding RefCaninos}" IsReadOnly="True" Width="170"/>
                <DataGridTextColumn Header="Valor ref felinos" Binding="{Binding RefFelinos}" IsReadOnly="True" Width="170"/>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Observaciones -->
        <StackPanel Grid.Row="1" Orientation="Vertical" Margin="0,10,0,0">
            <TextBlock Text="Observaciones" FontWeight="Bold"/>
            <TextBox Text="{Binding Observaciones, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" Height="80" TextWrapping="Wrap"/>
        </StackPanel>

        <!-- Botones al pie: primero Confirmar, luego Limpiar -->
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,0">
            <Button Content="Confirmar" Width="160" Height="36" Click="OnConfirmClick" Style="{StaticResource PrimaryButton}"/>
            <Button Content="Limpiar" Width="140" Height="36" Click="OnClearClick" Style="{StaticResource DangerButton}"/>
        </StackPanel>
    </Grid>
</Window>